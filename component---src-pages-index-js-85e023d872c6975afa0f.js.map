{"version":3,"sources":["webpack:///./src/components/Main/intro.js","webpack:///./src/components/Main/prizes.js","webpack:///./src/components/PayBtn/payBtn.js","webpack:///./src/components/Modal/olympGuide.js","webpack:///./src/components/Modal/payment.js","webpack:///./src/components/Modal/modal.js","webpack:///./src/components/Main/jumbotron.js","webpack:///./src/components/Main/details.js","webpack:///./src/components/Main/main.js","webpack:///./src/pages/index.js"],"names":["Intro","data","tag","variant","className","lg","border","size","sm","fluid","yaklass","childImageSharp","mgiro","grgu","Prizes","md","fixed","prize","icon","PayBtn","checkBox","useState","isOpen","toggle","onModal","onClick","current","inputElementRef","checked","window","location","far","outline","OlympGuide","href","target","rel","login","registration","olympiadRegistration","Payment","payment1","payment2","payment3","payment4","payment5","payment6","payment7","payment8","Modal","document","olympiad","allMarkdownRemark","nodes","frontmatter","payment","link","modalPreset","doc","btnName","header","Jumbotron","React","createRef","color","label","filled","type","id","ref","Details","my","Main","IndexPage","title"],"mappings":"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","file":"component---src-pages-index-js-85e023d872c6975afa0f.js","sourcesContent":["import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\nimport { MDBTypography, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBCardHeader, MDBCardText, MDBBox } from \"mdbreact\";\r\n\r\nconst Intro = () => {\r\n  const data = useStaticQuery(graphql`\r\n  query {\r\n    yaklass: file(relativePath: { eq: \"YAKlass_logo_squere_w200.jpg\" }) {\r\n      childImageSharp {\r\n        fluid {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n    grgu: file(relativePath: { eq: \"grodnenskiy-gosudarstvennyy-universitet-imeni-yanki-kupaly.png\" }) {\r\n      childImageSharp {\r\n        fluid {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n    mgiro: file(relativePath: { eq: \"mgiro.png\" }) {\r\n      childImageSharp {\r\n        fluid {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n  }\r\n`)\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <MDBTypography tag=\"h2\" variant=\"h2-responsive\" className=\"text-center\">\r\n          Межрегиональная олимпиада по&nbsp;математике\r\n      </MDBTypography>\r\n        <MDBTypography tag=\"h3\" variant=\"h3-responsive\" className=\"text-center\">\r\n          среди учащихся III - IV классов учреждений общего среднего образования\r\n      </MDBTypography>\r\n        <MDBRow className=\"mt-4\">\r\n          <MDBCol lg=\"8\">\r\n            <MDBCard border=\"light\" className=\"mb-3\">\r\n              <MDBCardHeader>Организатор Олимпиады</MDBCardHeader>\r\n              <MDBCardBody>\r\n                <MDBRow>\r\n                  <MDBCol size=\"4\" sm=\"2\">\r\n                    <Img fluid={data.yaklass.childImageSharp.fluid} />\r\n                  </MDBCol>\r\n                  <MDBCol size=\"8\" sm=\"10\">\r\n                    <MDBCardText>\r\n                      Образовательный интернет&nbsp;&mdash; портал &laquo;ЯКласс&raquo;\r\n                  </MDBCardText>\r\n                  </MDBCol>\r\n                </MDBRow>\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n            <MDBCard border=\"light\" className=\"mb-3\">\r\n              <MDBCardHeader>Партнеры Олимпиады</MDBCardHeader>\r\n              <MDBCardBody>\r\n                <MDBRow>\r\n                  <MDBCol size=\"4\" sm=\"2\">\r\n                    <Img fluid={data.mgiro.childImageSharp.fluid} />\r\n                  </MDBCol>\r\n                  <MDBCol size=\"8\" sm=\"10\">\r\n                    <MDBCardText>ГУО &laquo;Минский городской институт развития образования&raquo;</MDBCardText>\r\n                  </MDBCol>\r\n                </MDBRow>\r\n                <MDBRow className=\"mt-3\">\r\n                  <MDBCol size=\"4\" sm=\"2\">\r\n                    <Img fluid={data.grgu.childImageSharp.fluid} />\r\n                  </MDBCol>\r\n                  <MDBCol size=\"8\" sm=\"10\">\r\n                    <MDBCardText>УО &laquo;Гродненский государственный университет имени Янки Купалы&raquo;</MDBCardText>\r\n                  </MDBCol>\r\n                </MDBRow>\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n          </MDBCol>\r\n          <MDBCol lg=\"4\">\r\n            <MDBBox className=\"p-3 authors\">\r\n              <p><b>Автор-разработчик заданий:</b> Т.А. Полюхович, бакалавр педагогических наук, учитель начальных классов\r\n                  ГУО &laquo;Средняя школа &#8470;&nbsp;115&nbsp;г. Минска&raquo;\r\n            </p>\r\n              <p className=\"m-0\">\r\n                <b>Рецензент:</b> Д.И. Прохоров, кандидат педагогических наук, доцент кафедры педагогики, заместитель\r\n                декана факультета повышения квалификации педагогических работников государственного учреждения образования\r\n                &laquo;Минский городской институт развития образования&raquo;\r\n            </p>\r\n            </MDBBox>\r\n          </MDBCol>\r\n        </MDBRow>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Intro","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\nimport { MDBContainer, MDBIcon, MDBRow, MDBCol } from \"mdbreact\"\r\n\r\nconst Prizes = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      prize: file(relativePath: { eq: \"smartphone-w250.png\" }) {\r\n        childImageSharp {\r\n          fixed {\r\n            ...GatsbyImageSharpFixed\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <div className=\"prizes mt-5 z-depth-1\">\r\n        <MDBContainer size=\"lg\" className=\"white-text prizes__text-block\">\r\n          <MDBRow>\r\n            <MDBCol md=\"6\" className=\"py-5 mx-auto text-center\">\r\n              <Img fixed={data.prize.childImageSharp.fixed} />\r\n            </MDBCol>\r\n            <MDBCol md=\"6\" className=\"py-5 d-flex flex-column\">\r\n              <div className=\"d-flex flex-grow-1 row-icon-txt\">\r\n                <MDBIcon icon=\"trophy\" className=\"orange-text\" />\r\n                <p className=\"font-s-125r\">Победитель Олимпиады, занявший первое место, награждается смартфоном!</p>\r\n              </div>\r\n              <div className=\"d-flex flex-grow-1 row-icon-txt\">\r\n                <MDBIcon icon=\"award\" className=\"yellow-text\" />\r\n                <p className=\"font-s-125r\">Участники, занявшие 2 и 3 места – ценными призами!</p>\r\n              </div>\r\n              <div className=\"d-flex flex-grow-1 row-icon-txt\">\r\n                <MDBIcon icon=\"graduation-cap\" className=\"deep-purple-text\" />\r\n                <p className=\"font-s-125r\">Все участники Олимпиады получают почетные дипломы!</p>\r\n              </div>\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBContainer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Prizes\r\n","import React, { useState } from 'react';\r\nimport { MDBBtn, MDBModal, MDBModalBody, MDBModalFooter, MDBIcon } from 'mdbreact';\r\n\r\nconst PayBtn = ({ checkBox }) => {\r\n  const [isOpen, toggle] = useState(false);\r\n\r\n  const onPay = () => {\r\n    const isCheck = checkBox.current.inputElementRef.current.checked;\r\n    if (isCheck) {\r\n      window.location = 'https://checkout.bepaid.by/v2/confirm_order/prd_fbb3a61f35993b1f/9435';\r\n    } else {\r\n      onModal();\r\n    }\r\n  }\r\n\r\n  const onModal = () => {\r\n    toggle(!isOpen);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MDBBtn onClick={onPay}>Оплатить <MDBIcon far icon=\"credit-card\" /></MDBBtn>\r\n      <MDBModal isOpen={isOpen} toggle={onModal} className=\"custom-modal modal-dialog-centered modal-sm\">\r\n        <MDBModalBody>\r\n          <span className=\"font-weight-bold red-text\">Необходимо прочитать инструкцию и подтвердить согласие с условиями Олимпиады</span>\r\n        </MDBModalBody>\r\n        <MDBModalFooter>\r\n          <MDBBtn outline onClick={onModal}>Закрыть</MDBBtn>\r\n        </MDBModalFooter>\r\n      </MDBModal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PayBtn;","import React from \"react\";\r\nimport { useStaticQuery, graphql } from \"gatsby\";\r\nimport Img from \"gatsby-image\";\r\nimport { MDBRow, MDBCol } from \"mdbreact\";\r\n\r\nconst OlympGuide = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      login: file(relativePath: { eq: \"login.jpg\" }) {\r\n        childImageSharp {\r\n          fluid {\r\n            ...GatsbyImageSharpFluid\r\n          }\r\n        }\r\n      }\r\n      registration: file(relativePath: { eq: \"registration.jpg\" }) {\r\n        childImageSharp {\r\n          fluid {\r\n            ...GatsbyImageSharpFluid\r\n          }\r\n        }\r\n      }\r\n      olympiadRegistration: file(relativePath: { eq: \"olympiad_registration.png\" }) {\r\n        childImageSharp {\r\n          fluid {\r\n            ...GatsbyImageSharpFluid\r\n         }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <div className=\"text-left doc-wrapper\">\r\n        <MDBRow>\r\n          <MDBCol className=\"col-doc\">1</MDBCol>\r\n          <MDBCol size=\"11\">Для участия в Олимпиаде участнику необходимо быть зарегистрированным на сайте ЯКласс (yaklass.by) и иметь свой профиль. В профиле должны быть       указаны полные и подлинные имя и фамилия, действующий адрес электронной почты участника, а также контактный номер мобильного телефона, по которому можно связаться с участником. Вход через иные сервисы, в том числе schools.by и социальные сети, не является подтверждением наличия профиля участника Олимпиады.\r\n          </MDBCol>\r\n        </MDBRow>\r\n        <MDBRow>\r\n          <MDBCol className=\"col-doc\">2</MDBCol>\r\n          <MDBCol size=\"11\">Проверить регистрацию на сайте и свой профиль можно по этой <a href=\"https://www.yaklass.by/Account/Login\" target=\"_blank\" rel=\"noopener noreferrer\">ссылке</a> зайдя на портал под своим логином и паролем.\r\n          <Img fluid={data.login.childImageSharp.fluid} />\r\n          </MDBCol>\r\n        </MDBRow>\r\n        <MDBRow>\r\n          <MDBCol className=\"col-doc\">3</MDBCol>\r\n          <MDBCol size=\"11\">При отсутствии профиля участнику Олимпиады необходимо пройти регистрацию на сайте ЯКласс (yaklass.by) по ссылке <a href=\"https://www.yaklass.by/Account/Register?returnUrl=%2FAccount%2FLogin\" target=\"_blank\" rel=\"noopener noreferrer\">ссылке</a> обязательно указав свою роль на портале – Ученик, электронную почту, полные и настоящие имя и фамилию, контактный номер мобильного телефона, а также выбрать школу и класс. В случае отсутствия школы в списке нажать на меню «Добавить новую школу» и ввести полное название своей школы и полный адрес.\r\n          <Img fluid={data.registration.childImageSharp.fluid} />\r\n          </MDBCol>\r\n        </MDBRow>\r\n        <MDBRow>\r\n          <MDBCol className=\"col-doc\">4</MDBCol>\r\n          <MDBCol size=\"11\">Зарегистрировавшись на сайте и получив подтверждение регистрации на электронную почту, необходимо <b>оплатить</b> участие в Олимпиаде.<br></br>\r\n            <span className=\"badge badge-pill badge-warning\">Внимание</span><br></br>\r\n            <b>Не переходите к оплате, если Вы еще не зарегистрировались на портале &laquo;Якласс&raquo;</b><br></br>\r\n            <b>При оплате необходимо в строке &laquo;Фамилия&raquo; и &laquo;Имя&raquo; указать фамилию и имя ребенка, который будет принимать участие в Олимпиаде. Эти данные должны совпадать с данными регистрации на сайте yaklass.by</b></MDBCol>\r\n        </MDBRow>\r\n        <MDBRow>\r\n          <MDBCol className=\"col-doc\">5</MDBCol>\r\n          <MDBCol size=\"11\">После оплаты Вы будете переадресованы на страницу записи для участия в Олимпиаде.<br></br>\r\n            <span className=\"badge badge-pill badge-warning\">Внимание</span><br></br>\r\n            <b>Вам необходимо сохранить эту страницу в закладки, чтобы иметь доступ к Одимпиадным задачам.</b>\r\n            <Img fluid={data.olympiadRegistration.childImageSharp.fluid} />\r\n          </MDBCol>\r\n        </MDBRow>\r\n        <MDBRow>\r\n          <MDBCol className=\"col-doc\">6</MDBCol>\r\n          <MDBCol size=\"11\">Задания Олимпиады в&nbsp;виде проверочной работы будут доступны для решения участникам Олимпиады, зарегистрировавшимся на&nbsp;интернет&nbsp;&mdash; портале &laquo;ЯКласс&raquo; и&nbsp;оплатившим свое участие в&nbsp;Олимпиаде, 28&nbsp;марта 2020 года с&nbsp;11.00 часов до&nbsp;12.00 часов этого&nbsp;же дня.</MDBCol>\r\n        </MDBRow>\r\n        <MDBRow>\r\n          <MDBCol className=\"col-doc\">7</MDBCol>\r\n          <MDBCol size=\"11\">Задания Олимпиады можно решать в&nbsp;любой последовательности. При выполнении заданий Олимпиады рекомендуется пройти &laquo;Гимнастику для глаз&raquo;, за&nbsp;что начисляются дополнительные баллы.\r\n          </MDBCol>\r\n        </MDBRow>\r\n        <MDBRow>\r\n          <MDBCol className=\"col-doc\">8</MDBCol>\r\n          <MDBCol size=\"11\">Критериями определения победителей Олимпиады&nbsp;&mdash; наибольшее количество набранных баллов и&nbsp;минимальное время, за&nbsp;которое участник решил задания Олимпиады.\r\n          </MDBCol>\r\n        </MDBRow>\r\n        <MDBRow>\r\n          <MDBCol className=\"col-doc\">9</MDBCol>\r\n          <MDBCol size=\"11\">Неоплата участия в&nbsp;Олимпиаде, а&nbsp;так&nbsp;же иные несоответствия, в&nbsp;том числе данных, указанных в&nbsp;профиле участника Олимпиады, являются основанием для дисквалификации.\r\n          </MDBCol>\r\n        </MDBRow>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OlympGuide;\r\n","import React from \"react\";\r\nimport { useStaticQuery, graphql } from \"gatsby\";\r\nimport Img from \"gatsby-image\";\r\nimport { MDBRow, MDBCol } from \"mdbreact\";\r\n\r\nconst Payment = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      payment1: file(relativePath: { eq: \"payment-1.jpg\" }) {\r\n        childImageSharp {\r\n          fluid {\r\n            ...GatsbyImageSharpFluid\r\n          }\r\n        }\r\n      }\r\n      payment2: file(relativePath: { eq: \"payment-2.jpg\" }) {\r\n        childImageSharp {\r\n          fluid {\r\n            ...GatsbyImageSharpFluid\r\n          }\r\n        }\r\n      }\r\n      payment3: file(relativePath: { eq: \"payment-3.jpg\" }) {\r\n        childImageSharp {\r\n          fluid {\r\n            ...GatsbyImageSharpFluid\r\n          }\r\n        }\r\n      }\r\n      payment4: file(relativePath: { eq: \"payment-4.jpg\" }) {\r\n        childImageSharp {\r\n          fluid {\r\n            ...GatsbyImageSharpFluid\r\n          }\r\n        }\r\n      }\r\n      payment5: file(relativePath: { eq: \"payment-5.jpg\" }) {\r\n        childImageSharp {\r\n          fluid {\r\n            ...GatsbyImageSharpFluid\r\n          }\r\n        }\r\n      }\r\n      payment6: file(relativePath: { eq: \"payment-6.jpg\" }) {\r\n        childImageSharp {\r\n          fluid {\r\n            ...GatsbyImageSharpFluid\r\n          }\r\n        }\r\n      }\r\n      payment7: file(relativePath: { eq: \"payment-7.jpg\" }) {\r\n        childImageSharp {\r\n          fluid {\r\n            ...GatsbyImageSharpFluid\r\n          }\r\n        }\r\n      }\r\n      payment8: file(relativePath: { eq: \"payment-8.jpg\" }) {\r\n        childImageSharp {\r\n          fluid {\r\n            ...GatsbyImageSharpFluid\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <div className=\"text-left doc-wrapper\">\r\n        <MDBRow>\r\n          <MDBCol className=\"col-doc font-600\">Шаг №1</MDBCol>\r\n          <MDBCol size=\"11\">\r\n            <p>\r\n              Для участия в&nbsp;Олимпиаде участнику необходимо быть зарегистрированным на&nbsp;сайте ЯКласс (yaklass.by) и&nbsp;иметь свой профиль. Для этого необходимо нажать на&nbsp;кнопку &laquo;Регистрация&raquo; на&nbsp;главной странице и&nbsp;заполнить все необходимые поля. В&nbsp;профиле должны быть указаны полные и&nbsp;подлинные имя и&nbsp;фамилия, действующий адрес электронной почты участника, а&nbsp;также контактный номер мобильного телефона, по&nbsp;которому можно связаться с&nbsp;участником. Вход через иные сервисы, в&nbsp;том числе schools.by и&nbsp;социальные сети, не&nbsp;является подтверждением наличия профиля участника Олимпиады.\r\n            </p>\r\n            <p className=\"font-600 my-3\">\r\n              ВНИМАНИЕ! В случае наличия уже зарегистрированного профиля повторная регистрация на портале не требуется и вы можете сразу переходить к шагу №2!\r\n            </p>\r\n            <Img fluid={data.payment1.childImageSharp.fluid} />\r\n          </MDBCol>\r\n        </MDBRow>\r\n        <MDBRow className=\"mt-4\">\r\n          <MDBCol className=\"col-doc font-600\">Шаг №2</MDBCol>\r\n          <MDBCol size=\"11\">\r\n            <p>\r\n              Необходимо зайти на&nbsp;портал под своим логином и&nbsp;паролем нажав кнопку &laquo;Вход на&nbsp;портал&raquo;\r\n            </p>\r\n            <Img fluid={data.payment2.childImageSharp.fluid} />\r\n          </MDBCol>\r\n        </MDBRow>\r\n        <MDBRow className=\"mt-4\">\r\n          <MDBCol className=\"col-doc font-600\">Шаг №3</MDBCol>\r\n          <MDBCol size=\"11\">\r\n            <p>\r\n              Далее необходимо оплатить участие в&nbsp;Олимпиаде. Для этого в&nbsp;меню с&nbsp;левой стороны выберите &laquo;Олимпиада&raquo;\r\n            </p>\r\n            <Img fluid={data.payment3.childImageSharp.fluid} />\r\n          </MDBCol>\r\n        </MDBRow>\r\n        <MDBRow className=\"mt-4\">\r\n          <MDBCol className=\"col-doc font-600\">Шаг №4</MDBCol>\r\n          <MDBCol size=\"11\">\r\n            <p>\r\n            На&nbsp;странице Олимпиады пролистайте вниз до&nbsp;блока оплаты. Пожалуйста, ознакомьтесь с&nbsp;инструкцией &laquo;О&nbsp;порядке участия в&nbsp;Межрегиональной Олимпиаде по&nbsp;математике среди учащихся III&nbsp;&mdash; IV&nbsp;классов учреждений общего и&nbsp;среднего образования&raquo;. В&nbsp;случае согласия с&nbsp;условиями проведения Олимпиады, установите галочку &laquo;С&nbsp;условиями проведения Олимпиады согласен&raquo; и&nbsp;нажмите кнопку &laquo;Оплатить&raquo;\r\n            </p>\r\n            <Img fluid={data.payment4.childImageSharp.fluid} />\r\n          </MDBCol>\r\n        </MDBRow>\r\n        <MDBRow className=\"mt-4\">\r\n          <MDBCol className=\"col-doc font-600\">Шаг №5</MDBCol>\r\n          <MDBCol size=\"11\">\r\n            <p>\r\n            Для подтверждения согласия с&nbsp;суммой за&nbsp;участие в&nbsp;Олимпиаде нажмите кнопку &laquo;Оплатить&raquo;\r\n            </p>\r\n            <Img fluid={data.payment5.childImageSharp.fluid} />\r\n          </MDBCol>\r\n        </MDBRow>\r\n        <MDBRow className=\"mt-4\">\r\n          <MDBCol className=\"col-doc font-600\">Шаг №6</MDBCol>\r\n          <MDBCol size=\"11\">\r\n            <p>\r\n            Введите данные банковской карты с&nbsp;которой будет производиться оплата, а&nbsp;также заполните все необходимые поля с&nbsp;данными участника и&nbsp;после этого нажмите кнопку &laquo;Оплатить&nbsp;3.00&nbsp;BYN&raquo;\r\n            </p>\r\n            <p className=\"font-600 my-3\">\r\n            <span className=\"badge badge-pill badge-warning\">Внимание</span><br></br>При оплате необходимо в строке «Фамилия» и «Имя» указать фамилию и имя ребенка, который будет принимать участие в Олимпиаде. Эти данные должны совпадать с данными регистрации на сайте yaklass.by\r\n            </p>\r\n            <Img fluid={data.payment6.childImageSharp.fluid} />\r\n          </MDBCol>\r\n        </MDBRow>\r\n        <MDBRow className=\"mt-4\">\r\n          <MDBCol className=\"col-doc font-600\">Шаг №7</MDBCol>\r\n          <MDBCol size=\"11\">\r\n            <p>\r\n            Подтвердите оплату одноразовым паролем, который был выслан на&nbsp;телефон владельца банковской карты\r\n            </p>\r\n            <p className=\"font-600 my-3\">\r\n            <span className=\"badge badge-pill badge-warning\">Внимание</span><br></br>\r\n            Внешний вид страницы подтверждения оплаты зависит от&nbsp;банка выпустившего карту. В&nbsp;целях обеспечения безопасности оплата может быть произведена с&nbsp;карты любого банка, которая поддерживает технологию 3-D Secure\r\n            </p>\r\n            <Img fluid={data.payment7.childImageSharp.fluid} />\r\n          </MDBCol>\r\n        </MDBRow>\r\n        <MDBRow className=\"mt-4\">\r\n          <MDBCol className=\"col-doc font-600\">Шаг №8</MDBCol>\r\n          <MDBCol size=\"11\">\r\n            <p>\r\n            После завершения процедуры оплаты&nbsp;Вы будете переадресованы на&nbsp;страницу записи для участия в&nbsp;Олимпиаде\r\n            </p>\r\n            <Img fluid={data.payment8.childImageSharp.fluid} />\r\n          </MDBCol>\r\n        </MDBRow>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Payment;\r\n","import React, { useState } from 'react';\r\nimport { useStaticQuery, graphql } from \"gatsby\";\r\nimport { MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter, MDBIcon } from 'mdbreact';\r\nimport OlympGuide from './olympGuide';\r\nimport Payment from './payment';\r\n\r\nconst Modal = ({ document }) => {\r\n  const data = useStaticQuery(graphql`\r\n  query {\r\n    allMarkdownRemark {\r\n        nodes {\r\n          frontmatter {\r\n            _0 {\r\n                btnName\r\n                header\r\n            }\r\n            _1 {\r\n                btnName\r\n                header\r\n            }\r\n          }\r\n        }\r\n    }\r\n  }\r\n`)\r\n\r\n  const [isOpen, toggle] = useState(false);\r\n\r\n  const onModal = () => {\r\n    toggle(!isOpen);\r\n  }\r\n\r\n  const olympiad = data.allMarkdownRemark.nodes[0].frontmatter['_0'];\r\n  const payment = data.allMarkdownRemark.nodes[0].frontmatter['_1'];\r\n\r\n  let link = null;\r\n  let modalPreset = null;\r\n  let doc = null;\r\n  if (document === 'olympiad') {\r\n    modalPreset = olympiad;\r\n    link = <MDBBtn onClick={onModal} outline>{modalPreset.btnName} <MDBIcon icon=\"info-circle\" /></MDBBtn>\r\n    doc = <OlympGuide />\r\n  } else {\r\n    modalPreset = payment;\r\n    link = <button className=\"modalLink mt-3\" onClick={onModal}>{modalPreset.btnName}</button>\r\n    doc = <Payment />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {link}\r\n      <MDBModal isOpen={isOpen} toggle={onModal} className=\"custom-modal\">\r\n        <MDBModalHeader toggle={onModal} className=\"text-left\">\r\n          {modalPreset.header}\r\n        </MDBModalHeader>\r\n        <MDBModalBody>\r\n          {doc}\r\n        </MDBModalBody>\r\n        <MDBModalFooter>\r\n          <MDBBtn outline onClick={onModal}>Закрыть</MDBBtn>\r\n        </MDBModalFooter>\r\n      </MDBModal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Modal\r\n","import React from 'react';\r\nimport PayBtn from '../PayBtn/payBtn';\r\nimport Modal from \"../Modal/modal\";\r\nimport { MDBJumbotron, MDBCardBody, MDBCardTitle, MDBInput, MDBAlert, MDBIcon } from \"mdbreact\";\r\n\r\nconst Jumbotron = () => {\r\n  const checkBox = React.createRef();\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <MDBJumbotron className=\"text-center mx-auto p-3 my-5\">\r\n          <MDBCardBody>\r\n            <MDBCardTitle>Регистрация и&nbsp;оплата участия</MDBCardTitle>\r\n            <p className=\"default-color-text my-4 font-weight-bold font-s-def\">Участие в&nbsp;Олимпиаде&nbsp;&mdash; добровольное и&nbsp;платное</p>\r\n            <p className=\"font-s-def\">Стоимость участия в Олимпиаде - 3 бел. рубля</p>\r\n            <p className=\"font-s-def\">Для участия в&nbsp;Олимпиаде необходимо ознакомится с&nbsp;Инструкцией</p>\r\n            <MDBAlert color=\"warning\" >\r\n              <MDBIcon icon=\"bell\" className=\"mr-3\" /> После оплаты Вы будете переадресованы на стартницу с доступом к заданиям по Олимпиаде. Сохраните эту страницу в закладки, что бы не потерять доступ к ней в дальнейшем.\r\n            </MDBAlert>\r\n            <hr className=\"my-4\" />\r\n            <div className=\"pt-2\">\r\n              <Modal document={'olympiad'}/>\r\n              <PayBtn checkBox={checkBox} />\r\n            </div>\r\n            <Modal document={'payment'}/>\r\n            <div className=\"custom-input-checkbox mt-3\">\r\n              <MDBInput label=\"С условиями проведения Олимпиады согласен\" filled type=\"checkbox\" id=\"checkbox2\" ref={checkBox} />\r\n            </div>\r\n          </MDBCardBody>\r\n        </MDBJumbotron>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Jumbotron","import React from \"react\"\r\nimport { MDBCard, MDBCardBody, MDBCardText, MDBCardHeader, MDBIcon, MDBBox } from \"mdbreact\"\r\n\r\nconst Details = () => (\r\n  <>\r\n    <div className=\"details\">\r\n      <MDBCard className=\"h-100\">\r\n        <MDBCardHeader color=\"light-green lighten-3\" className=\"custom-dark-text\">\r\n          Программа проведения олимпиады\r\n        </MDBCardHeader>\r\n        <MDBCardBody>\r\n          <div className=\"d-flex\">\r\n            <MDBIcon icon=\"map-marker-alt\" className=\"deep-orange-text card-fa-icon mr-2\" />\r\n            <MDBCardText>Олимпиада будет проведена дистанционно (в режиме он - лайн) на интернет &mdash; портале &laquo;ЯКласс&raquo;</MDBCardText>\r\n          </div>\r\n          <div className=\"d-flex my-2\">\r\n            <MDBIcon far icon=\"calendar-alt\" className=\"deep-orange-text card-fa-icon mr-2\" />\r\n            <MDBCardText>&laquo;28&raquo; марта 2020 года</MDBCardText>\r\n          </div>\r\n          <div className=\"d-flex my-2\">\r\n            <MDBIcon icon=\"clock\" className=\"deep-orange-text card-fa-icon mr-2\" />\r\n            <MDBCardText>в период с 11.00 до 12.00</MDBCardText>\r\n          </div>\r\n          <div className=\"d-flex\">\r\n            <MDBIcon icon=\"info\" className=\"deep-orange-text card-fa-icon mr-2\" />\r\n            <MDBCardText>Доступ к решению задач возможен с любого устройства в любом удобном для Вас месте</MDBCardText>\r\n          </div>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n      <MDBBox tag=\"p\" my={5} className=\"text-center\">\r\n        <span className=\"d-block\">По всем дополнительным вопросам участия в Олимпиаде просим обращаться на адрес электронной почты</span>\r\n        <a href=\"mailto:info@yaklass.by\" className=\"mail-link\">info@yaklass.by</a>\r\n      </MDBBox>\r\n    </div>\r\n  </>\r\n)\r\n\r\nexport default Details\r\n","import React from \"react\"\r\nimport { MDBContainer } from \"mdbreact\";\r\nimport Intro from \"./intro\"\r\nimport Prizes from \"./prizes\"\r\nimport Jumbotron from \"./jumbotron\"\r\nimport Details from \"./details\"\r\n\r\nconst Main = () => (\r\n  <>\r\n    <MDBContainer size=\"lg\">\r\n      <Intro />\r\n    </MDBContainer>\r\n    <Prizes />\r\n    <MDBContainer size=\"lg\">\r\n      <Jumbotron />\r\n      <Details />\r\n    </MDBContainer>\r\n  </>\r\n)\r\n\r\nexport default Main;","import React from \"react\"\r\nimport Main from \"../components/Main/main\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst IndexPage = () => (\r\n  <Layout>\r\n    <SEO title=\"Олимпиада ЯКласс!\" />\r\n    <Main />\r\n  </Layout>\r\n)\r\n\r\nexport default IndexPage\r\n"],"sourceRoot":""}